<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>切换样式表</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
<link href="blue.css" rel="stylesheet" type="text/css" id="cssfile"/>
<script>
	function changeStyle(name){
		css=document.getElementById("cssfile");
		css.href=name+".css";
	}
</script>
</head>
<body> 
<div id="header"> 
  <h1>CSS 2.0的优势</h1> 
</div> 
<div id="nav"> 
  <input type="button" value="经典蓝" onclick="changeStyle('blue');"/> 
  <input type="button" value="宝石红" onclick="changeStyle('red')";/> 
</div> 
<div id="content"> CSS(Cascading Style Sheets) 层叠样式表目前的最新版本为 2.0 ，是控制网页布局样式，并能够真正做到网页表现与内容分离的一种标记语言。相对于传统 HTML 的简单样式控制而言， CSS 能够对网页中的对象的位置排版进行象素级的精确控制，支持几乎所有的字体字号样式，以及拥有对网页对象盒模型样式的控制能力，并能够进行初步的页面交互设计，是目前最优秀的表现设计标记语言。归纳起来 CSS 2.0 有以下几个主要优势。<br /> 
  <br /> 
  <ul> 
    <li><strong>浏览器支持完善</strong> <br /> 
      目前 CSS 2.0 版本是众多浏览器支持最完善的版本，最新的浏览器均以 2.0 为ＣＳＳ支持原型进行设计，使用 CSS 2.0 的样式设计在众多平台及浏览器下样式表现最为接近。</li> 
    <li><strong>表现与结构分离 </strong><br /> 
      CSS 2.0 真正意义上实现了设计代码与内容分离，而在 CSS 的设计代码中通过 CSS 的内部导入 (Import) 特性，又可以使设计代码根据设计需求进行二次分离。如为字体专门设计一套样式表，为版式、为各个频道等设计一套样式表，根据页面显示的需要重新组织，使得设计代码本身也便于维护与修改。</li> 
    <li><strong>样式设计控制功能强大 </strong><br /> 
      对网页对象的位置排版能够进行象素级的精确控制，支持所有字体字号样式，优秀的盒模型控制能力，简单的交互设计能力。</li> 
    <li> <strong>继承性能优越 </strong> <br /> 
      CSS 2.0 的语言结构具有类似ＯＯＰ面向对象的基本功能，良好的 CSS 代码设计可以使得代码之间产生继承及重载关系，能够达到最大限度的代码重用，降低代码量及维护成本</li> 
    。
  </ul> 
</div> 
</body>
</html>
